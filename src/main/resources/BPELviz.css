/* UI */
div.dotted_source {
  display: none; }

#processContainer {
  overflow: auto; }

#tabContainer {
  float: right;
  width: 500px;
  top: 0px;
  right: 0px;
  position: fixed; }

#FullSource {
  height: 90vh;
  overflow: auto; }

.collapseExpandToggleBtn {
  float: right;
  margin: 1px;
  margin-right: -5px;
  margin-top: 5px; }

div.bpel_correlationSets {
  display: none; }

div.bpel_correlationSet {
  display: none; }

div.bpel_documentation {
  display: none; }

div.bpel_extensions {
  display: none; }

div.bpel_condition {
  display: none; }

div.bpel_copy {
  display: none; }

div.bpel_fromParts {
  display: none; }

div.bpel_toParts {
  display: none; }

div.bpel_import {
  display: none; }

div.bpel_links {
  display: none; }

div.bpel_sources {
  display: none; }

div.bpel_targets {
  display: none; }

div.bpel_joinCondition {
  display: none; }

div.bpel_messageExchanges {
  display: none; }

div.bpel_messageExchange {
  display: none; }

div.bpel_partnerLink {
  display: none; }

div.bpel_partnerLinks {
  display: none; }

div.bpel_variables {
  display: none; }

div.bpel_variable {
  display: none; }

div.bpel_for {
  display: none; }

div.bpel_until {
  display: none; }

div.bpel_repeatEvery {
  display: none; }

div.bpel_activity.selected, div.selected.bpel_basic_activity, div.selected.bpel_assign, div.selected.bpel_empty, div.selected.bpel_compensate, div.selected.bpel_compensateScope, div.selected.bpel_exit, div.selected.bpel_extensionActivity, div.selected.bpel_invoke, div.selected.bpel_receive, div.selected.bpel_reply, div.selected.bpel_rethrow, div.selected.bpel_throw, div.selected.bpel_validate, div.selected.bpel_wait, div.selected.bpel_structured_activity, div.selected.bpel_eventHandlers, div.selected.bpel_if, div.selected.bpel_faultHandlers, div.selected.bpel_forEach, div.selected.bpel_catch, div.selected.bpel_catchAll, div.selected.bpel_flow, div.selected.bpel_pick, div.selected.bpel_onAlarm, div.selected.bpel_onEvent, div.selected.bpel_onMessage, div.selected.bpel_process, div.selected.bpel_repeatUntil, div.selected.bpel_scope, div.selected.bpel_sequence, div.selected.bpel_while, div.selected.bpel_if_child, div.selected.bpel_if_then, div.selected.bpel_if_elseif, div.selected.bpel_if_else {
  /* IE10 Consumer Preview */
  background-image: -ms-linear-gradient(top, white 0%, #ffcc66 100%);
  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(top, white 0%, #ffcc66 100%);
  /* Opera */
  background-image: -o-linear-gradient(top, white 0%, #ffcc66 100%);
  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, white), color-stop(1, #ffcc66));
  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(top, white 0%, #ffcc66 100%);
  /* W3C Markup, IE10 Release Preview */
  background-image: linear-gradient(to bottom, white 0%, #ffcc66 100%); }

/* each basic and structured activity has this */
div.bpel_activity, div.bpel_basic_activity, div.bpel_assign, div.bpel_empty, div.bpel_compensate, div.bpel_compensateScope, div.bpel_exit, div.bpel_extensionActivity, div.bpel_invoke, div.bpel_receive, div.bpel_reply, div.bpel_rethrow, div.bpel_throw, div.bpel_validate, div.bpel_wait, div.bpel_structured_activity, div.bpel_eventHandlers, div.bpel_if, div.bpel_faultHandlers, div.bpel_forEach, div.bpel_catch, div.bpel_catchAll, div.bpel_flow, div.bpel_pick, div.bpel_onAlarm, div.bpel_onEvent, div.bpel_onMessage, div.bpel_process, div.bpel_repeatUntil, div.bpel_scope, div.bpel_sequence, div.bpel_while, div.bpel_if_child, div.bpel_if_then, div.bpel_if_elseif, div.bpel_if_else {
  /* center it within parent */
  margin-left: auto;
  margin-right: auto;
  /* 10px border */
  margin-top: 10px;
  margin-bottom: 10px;
  padding-left: 10px;
  padding-right: 10px;
  border: 2px solid #7098b3;
  box-shadow: 5px 5px 17px #aaa;
  border-radius: 12px;
  background: #ffffff;
  cursor: standard;
  /* be higher than the +/- buttons */
  min-height: 39px;
  /* IE10 Consumer Preview */
  background-image: -ms-linear-gradient(top, white 0%, #ebf2f7 100%);
  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(top, white 0%, #ebf2f7 100%);
  /* Opera */
  background-image: -o-linear-gradient(top, white 0%, #ebf2f7 100%);
  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, white), color-stop(1, #ebf2f7));
  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(top, white 0%, #ebf2f7 100%);
  /* W3C Markup, IE10 Release Preview */
  background-image: linear-gradient(to bottom, white 0%, #ebf2f7 100%); }

/* BPEL distinguishes between basic and structured activities */
div.bpel_basic_activity, div.bpel_assign, div.bpel_empty, div.bpel_compensate, div.bpel_compensateScope, div.bpel_exit, div.bpel_extensionActivity, div.bpel_invoke, div.bpel_receive, div.bpel_reply, div.bpel_rethrow, div.bpel_throw, div.bpel_validate, div.bpel_wait {
  width: 225px; }

div.bpel_assign:before {
  content: "\00AB assign\00BB"; }

div.bpel_empty:before {
  content: "\00AB empty\00BB"; }

div.bpel_compensate:before {
  content: "\00AB compensate\00BB"; }

div.bpel_compensateScope:before {
  content: "\00AB compensateScope\00BB"; }

div.bpel_empty:before {
  content: "\00AB empty\00BB"; }

div.bpel_exit:before {
  content: "\00AB exit\00BB"; }

div.bpel_extensionActivity:before {
  content: "\00AB extensionActivity\00BB"; }

div.bpel_invoke:before {
  content: "\00AB invoke\00BB"; }

div.bpel_receive:before {
  content: "\00AB receive\00BB"; }

div.bpel_reply:before {
  content: "\00AB reply\00BB"; }

div.bpel_rethrow:before {
  content: "\00AB rethrow\00BB"; }

div.bpel_throw:before {
  content: "\00AB throw\00BB"; }

div.bpel_validate:before {
  content: "\00AB validate\00BB"; }

div.bpel_wait:before {
  content: "\00AB wait\00BB"; }

div.bpel_structured_activity, div.bpel_eventHandlers, div.bpel_if, div.bpel_faultHandlers, div.bpel_forEach, div.bpel_catch, div.bpel_catchAll, div.bpel_flow, div.bpel_pick, div.bpel_onAlarm, div.bpel_onEvent, div.bpel_onMessage, div.bpel_process, div.bpel_repeatUntil, div.bpel_scope, div.bpel_sequence, div.bpel_while {
  overflow: hidden; }

div.bpel_eventHandlers:before {
  content: "\00AB eventHandlers\00BB"; }

div.bpel_if:before {
  content: "\00AB if\00BB"; }

div.bpel_faultHandlers:before {
  content: "\00AB faultHandlers\00BB"; }

div.bpel_forEach:before {
  content: "\00AB forEach\00BB"; }

div.bpel_catch:before {
  content: "\00AB catch\00BB"; }

div.bpel_catchAll:before {
  content: "\00AB catchAll\00BB"; }

div.bpel_flow:before {
  content: "\00AB flow\00BB"; }

div.bpel_pick:before {
  content: "\00AB pick\00BB"; }

div.bpel_onAlarm:before {
  content: "\00AB onAlarm\00BB"; }

div.bpel_onEvent:before {
  content: "\00AB onEvent\00BB"; }

div.bpel_onMessage:before {
  content: "\00AB onMessage\00BB"; }

div.bpel_process:before {
  content: "\00AB process\00BB"; }

div.bpel_repeatUntil:before {
  content: "\00AB repeatUntil\00BB"; }

div.bpel_scope:before {
  content: "\00AB scope\00BB"; }

div.bpel_sequence:before {
  content: "\00AB sequence\00BB"; }

div.bpel_while:before {
  content: "\00AB while\00BB"; }

/* contents of each activity */
div.bpel_name {
  text-overflow: ellipsis;
  display: inline-block;
  /* line below name, currently not used
      // this line does not work together with the above
      overflow: hidden;
  
      margin-left: -10px;
      padding-left: 20px;
  
      margin-right: -10px;
      padding-right: 20px;
  
      padding-bottom: 5px;
      border-bottom: 2px solid rgb(112, 152, 179);
  */ }

/* special handling for each type of activity */
div.bpel_process {
  /* scale to width of contents */
  display: inline-block; }

div.bpel_if {
  padding: 0px;
  padding-bottom: 10px; }

/* then / elseif / else */
div.bpel_if_child, div.bpel_if_then, div.bpel_if_elseif, div.bpel_if_else {
  /* center it within parent */
  margin-left: 10px;
  margin-right: 0px;
  /* 10px border */
  margin-top: 10px;
  margin-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  float: left;
  display: inline-block; }

div.bpel_if_then:before {
  content: "\00AB then\00BB"; }

div.bpel_if_elseif:before {
  content: "\00AB elseif\00BB"; }

div.bpel_if_else:before {
  content: "\00AB else\00BB"; }
