// currently not displayed
@each $hidden in correlationSets, correlationSet, documentation, extensions,
condition,
fromParts, toParts,
import,
links, sources, targets, joinCondition,
messageExchanges, messageExchange,
partnerLink, partnerLinks,
variables, variable,
for, until, repeatEvery {

  div.bpel_#{$hidden} {
    display: none;
  }
}

/* each basic and structured activity has this */
div.bpel_activity {
    /* center it within parent */
    margin-left: auto;
    margin-right: auto;
  
    /* 10px border */
    margin-top: 10px;
    margin-bottom: 10px;
    padding-left: 10px;
    padding-right: 10px;
  
	border: 2px solid rgb(112, 152, 179);
    box-shadow: 5px 5px 17px #aaa;
	border-radius: 12px;
	background: #ffffff;
  
	cursor: standard;
}

/* BPEL distinguishes between basic and structured activities */

// all basic activities

div.bpel_basic_activity {
  @extend div.bpel_activity;

  width: 225px;
  height: 100px;

  /* IE10 Consumer Preview */
  background-image: -ms-linear-gradient(top, #FFFFFF 0%, #EBF2F7 100%);
  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(top, #FFFFFF 0%, #EBF2F7 100%);
  /* Opera */
  background-image: -o-linear-gradient(top, #FFFFFF 0%, #EBF2F7 100%);
  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, #FFFFFF), color-stop(1, #EBF2F7));
  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(top, #FFFFFF 0%, #EBF2F7 100%);
  /* W3C Markup, IE10 Release Preview */
  background-image: linear-gradient(to bottom, #FFFFFF 0%, #EBF2F7 100%);
}

@each $basicActivity in assign, empty, compensate, compensateScope, empty, exit, extensionActivity, invoke, receive, reply, rethrow, throw, validate, wait {
  div.bpel_#{$basicActivity} {
    @extend div.bpel_basic_activity;
  }

  div.bpel_#{$basicActivity}:before {
    content: "<<#{$basicActivity}>>"
  }
}


// all structured activities

div.bpel_structured_activity {
  @extend div.bpel_activity;

  overflow: hidden;
}

@each $structuredActivity in eventHandlers, if, faultHandlers, forEach, catch, catchAll, flow, pick, onAlarm, onEvent, onMessage, process, repeatUntil, scope, sequence, while {
  div.bpel_#{$structuredActivity} {
    @extend div.bpel_structured_activity;
  }

  div.bpel_#{$structuredActivity}:before {
    content: "<<#{$structuredActivity}>>"
  }
}

/* contents of each activity */

div.bpel_name:before {
  content: "Name: "
}

div.bpel_name {
  text-overflow: ellipsis;

  // position name next to <<type>> string
  display: inline-block;

/* line below name, currently not used
    // this line does not work together with the above
    overflow: hidden;

    margin-left: -10px;
    padding-left: 20px;

    margin-right: -10px;
    padding-right: 20px;

    padding-bottom: 5px;
    border-bottom: 2px solid rgb(112, 152, 179);
*/
}



/* special handling for each type of activity */

div.bpel_process {
  /* scale to width of contents */
  display: inline-block;
}

div.bpel_if {
  padding: 0px;
  padding-bottom: 10px;
}

/* then / elseif / else */
div.bpel_if_child {
  // quick hack: all bpel_if_children also carry bpel_activity
  @extend div.bpel_activity;

    /* center it within parent */
    margin-left: 10px;
    margin-right: 0px;
  
    /* 10px border */
    margin-top: 10px;
    margin-bottom: 0px;
    padding-left: 10px;
    padding-right: 10px;

    float: left;
    display: inline-block;
}

@each $ifChild in then, elseif, else {
  div.bpel_if_#{$ifChild} {
    @extend div.bpel_if_child;
  }

  div.bpel_if_#{$ifChild}:before {
    content: "<<#{$ifChild}>>"
  }
}
